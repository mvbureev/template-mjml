{"ast":null,"code":"var _jsxFileName = \"/home/bureev/Pro/krk/skeleton/src/elements/Sider/ScoreList/elements/ScoreItem.jsx\";\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Box } from '@material-ui/core';\nimport useStyles from './styled';\n\nconst ScoreItem = ({\n  icon: Icon,\n  title,\n  score,\n  isSidebarOpen\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.iconContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"span\",\n    className: clsx(classes.smallScore, {\n      [classes.animation]: !isSidebarOpen\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, score), /*#__PURE__*/React.createElement(Icon, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    component: \"span\",\n    className: clsx(classes.title, {\n      [classes.animation]: isSidebarOpen\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, title, \": \", score));\n};\n\nScoreItem.propTypes = {\n  isSidebarOpen: PropTypes.bool.isRequired,\n  icon: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired\n};\nexport default memo(ScoreItem);","map":{"version":3,"sources":["/home/bureev/Pro/krk/skeleton/src/elements/Sider/ScoreList/elements/ScoreItem.jsx"],"names":["React","memo","PropTypes","clsx","Box","useStyles","ScoreItem","icon","Icon","title","score","isSidebarOpen","classes","wrapper","iconContainer","smallScore","animation","propTypes","bool","isRequired","func","string","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,GAAT,QAAoB,mBAApB;AAEA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAEC,IAAR;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA,KAArB;AAA4BC,EAAAA;AAA5B,CAAD,KAAiD;AACjE,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AAEA,sBACE;AAAI,IAAA,SAAS,EAAEO,OAAO,CAACC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAED,OAAO,CAACE,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,SAAS,EAAEX,IAAI,CAACS,OAAO,CAACG,UAAT,EAAqB;AAAE,OAACH,OAAO,CAACI,SAAT,GAAqB,CAACL;AAAxB,KAArB,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KADH,CADF,eAIE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEE,OAAO,CAACL,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAOE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,SAAS,EAAEJ,IAAI,CAACS,OAAO,CAACH,KAAT,EAAgB;AAAE,OAACG,OAAO,CAACI,SAAT,GAAqBL;AAAvB,KAAhB,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KADH,QACYC,KADZ,CAPF,CADF;AAaD,CAhBD;;AAkBAJ,SAAS,CAACW,SAAV,GAAsB;AACpBN,EAAAA,aAAa,EAAET,SAAS,CAACgB,IAAV,CAAeC,UADV;AAEpBZ,EAAAA,IAAI,EAAEL,SAAS,CAACkB,IAAV,CAAeD,UAFD;AAGpBV,EAAAA,KAAK,EAAEP,SAAS,CAACmB,MAAV,CAAiBF,UAHJ;AAIpBT,EAAAA,KAAK,EAAER,SAAS,CAACoB,MAAV,CAAiBH;AAJJ,CAAtB;AAOA,eAAelB,IAAI,CAACK,SAAD,CAAnB","sourcesContent":["import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport { Box } from '@material-ui/core';\n\nimport useStyles from './styled';\n\nconst ScoreItem = ({ icon: Icon, title, score, isSidebarOpen }) => {\n  const classes = useStyles();\n\n  return (\n    <li className={classes.wrapper}>\n      <Box className={classes.iconContainer}>\n        <Box component=\"span\" className={clsx(classes.smallScore, { [classes.animation]: !isSidebarOpen })}>\n          {score}\n        </Box>\n        <Icon className={classes.icon} />\n      </Box>\n      <Box component=\"span\" className={clsx(classes.title, { [classes.animation]: isSidebarOpen })}>\n        {title}: {score}\n      </Box>\n    </li>\n  );\n};\n\nScoreItem.propTypes = {\n  isSidebarOpen: PropTypes.bool.isRequired,\n  icon: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nexport default memo(ScoreItem);\n"]},"metadata":{},"sourceType":"module"}