{"ast":null,"code":"var _jsxFileName = \"/home/bureev/Pro/krk/skeleton/src/elements/Sider/SubscriptionUpdate/elements/SubscriptionContent.jsx\";\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Link, Box } from '@material-ui/core';\nimport useStyles from './styled';\nimport SubscriptionImage from \"../assets/subscriptionImage.svg\";\nimport SubscriptionInnerIcon from \"../assets/subscriptionInnerIcon.svg\";\n\nconst SubscriptionContent = ({\n  isSidebarOpen,\n  shouldVisibleSubscription,\n  href,\n  subscriptionTypeMessage,\n  date,\n  daysNumber,\n  daysPlural\n}) => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Box, {\n    className: clsx(classes.subscription, {\n      [classes.animation]: isSidebarOpen && shouldVisibleSubscription\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    href: href,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SubscriptionImage, {\n    className: classes.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.leftSide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SubscriptionInnerIcon, {\n    className: classes.innerIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    className: classes.rightSide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"\\u041F\\u0440\\u043E\\u0434\\u043B\\u0438\\u0442\\u0435 \\u0441\\u0432\\u043E\\u044E \", subscriptionTypeMessage, \" \\u043F\\u043E\\u0434\\u043F\\u0438\\u0441\\u043A\\u0443\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, date ? `Истекает через ${daysNumber} ${daysPlural}` : null, \" \")))));\n};\n\nSubscriptionContent.defaultProps = {\n  date: Date.now()\n};\nSubscriptionContent.propTypes = {\n  isSidebarOpen: PropTypes.bool.isRequired,\n  shouldVisibleSubscription: PropTypes.bool.isRequired,\n  href: PropTypes.string.isRequired,\n  subscriptionTypeMessage: PropTypes.string.isRequired,\n  date: PropTypes.number,\n  daysNumber: PropTypes.number.isRequired,\n  daysPlural: PropTypes.string.isRequired\n};\nexport default memo(SubscriptionContent);","map":{"version":3,"sources":["/home/bureev/Pro/krk/skeleton/src/elements/Sider/SubscriptionUpdate/elements/SubscriptionContent.jsx"],"names":["React","memo","PropTypes","clsx","Link","Box","useStyles","SubscriptionContent","isSidebarOpen","shouldVisibleSubscription","href","subscriptionTypeMessage","date","daysNumber","daysPlural","classes","subscription","animation","background","content","leftSide","innerIcon","rightSide","title","text","defaultProps","Date","now","propTypes","bool","isRequired","string","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,IAAT,EAAeC,GAAf,QAA0B,mBAA1B;AAEA,OAAOC,SAAP,MAAsB,UAAtB;;;;AAKA,MAAMC,mBAAmB,GAAG,CAAC;AAC3BC,EAAAA,aAD2B;AAE3BC,EAAAA,yBAF2B;AAG3BC,EAAAA,IAH2B;AAI3BC,EAAAA,uBAJ2B;AAK3BC,EAAAA,IAL2B;AAM3BC,EAAAA,UAN2B;AAO3BC,EAAAA;AAP2B,CAAD,KAQtB;AACJ,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AAEA,sBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEH,IAAI,CAACY,OAAO,CAACC,YAAT,EAAuB;AAAE,OAACD,OAAO,CAACE,SAAT,GAAqBT,aAAa,IAAIC;AAAxC,KAAvB,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,SAAS,EAAEK,OAAO,CAACG,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACI,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACK,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,qBAAD;AAAuB,IAAA,SAAS,EAAEL,OAAO,CAACM,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACO,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAEP,OAAO,CAACQ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAA6CZ,uBAA7C,sDADF,eAEE;AAAG,IAAA,SAAS,EAAEI,OAAO,CAACS,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BZ,IAAI,GAAI,kBAAiBC,UAAW,IAAGC,UAAW,EAA9C,GAAkD,IAAnF,MAFF,CAJF,CAFF,CADF,CADF;AAgBD,CA3BD;;AA6BAP,mBAAmB,CAACkB,YAApB,GAAmC;AACjCb,EAAAA,IAAI,EAAEc,IAAI,CAACC,GAAL;AAD2B,CAAnC;AAIApB,mBAAmB,CAACqB,SAApB,GAAgC;AAC9BpB,EAAAA,aAAa,EAAEN,SAAS,CAAC2B,IAAV,CAAeC,UADA;AAE9BrB,EAAAA,yBAAyB,EAAEP,SAAS,CAAC2B,IAAV,CAAeC,UAFZ;AAG9BpB,EAAAA,IAAI,EAAER,SAAS,CAAC6B,MAAV,CAAiBD,UAHO;AAI9BnB,EAAAA,uBAAuB,EAAET,SAAS,CAAC6B,MAAV,CAAiBD,UAJZ;AAK9BlB,EAAAA,IAAI,EAAEV,SAAS,CAAC8B,MALc;AAM9BnB,EAAAA,UAAU,EAAEX,SAAS,CAAC8B,MAAV,CAAiBF,UANC;AAO9BhB,EAAAA,UAAU,EAAEZ,SAAS,CAAC6B,MAAV,CAAiBD;AAPC,CAAhC;AAUA,eAAe7B,IAAI,CAACM,mBAAD,CAAnB","sourcesContent":["import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport { Link, Box } from '@material-ui/core';\n\nimport useStyles from './styled';\n\nimport SubscriptionImage from '../assets/subscriptionImage.svg';\nimport SubscriptionInnerIcon from '../assets/subscriptionInnerIcon.svg';\n\nconst SubscriptionContent = ({\n  isSidebarOpen,\n  shouldVisibleSubscription,\n  href,\n  subscriptionTypeMessage,\n  date,\n  daysNumber,\n  daysPlural,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={clsx(classes.subscription, { [classes.animation]: isSidebarOpen && shouldVisibleSubscription })}>\n      <Link href={href}>\n        <SubscriptionImage className={classes.background} />\n        <Box className={classes.content}>\n          <Box className={classes.leftSide}>\n            <SubscriptionInnerIcon className={classes.innerIcon} />\n          </Box>\n          <Box className={classes.rightSide}>\n            <h3 className={classes.title}>Продлите свою {subscriptionTypeMessage} подписку</h3>\n            <p className={classes.text}>{date ? `Истекает через ${daysNumber} ${daysPlural}` : null} </p>\n          </Box>\n        </Box>\n      </Link>\n    </Box>\n  );\n};\n\nSubscriptionContent.defaultProps = {\n  date: Date.now(),\n};\n\nSubscriptionContent.propTypes = {\n  isSidebarOpen: PropTypes.bool.isRequired,\n  shouldVisibleSubscription: PropTypes.bool.isRequired,\n  href: PropTypes.string.isRequired,\n  subscriptionTypeMessage: PropTypes.string.isRequired,\n  date: PropTypes.number,\n  daysNumber: PropTypes.number.isRequired,\n  daysPlural: PropTypes.string.isRequired,\n};\n\nexport default memo(SubscriptionContent);\n"]},"metadata":{},"sourceType":"module"}