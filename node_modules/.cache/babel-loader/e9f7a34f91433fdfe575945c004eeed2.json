{"ast":null,"code":"var _jsxFileName = \"/home/bureev/Pro/krk/skeleton/src/elements/Sider/elements/NavigationItem/NavigationItem.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Box, Typography, IconButton } from '@material-ui/core';\nimport MenuLink from '../MenuLink/MenuLink';\nimport useStyles from './styled';\n\nconst NavigationItem = ({\n  to,\n  target,\n  isLinkActive,\n  icon: Icon,\n  noLink,\n  isMobile,\n  isUpBar,\n  isSidebarOpen,\n  title,\n  openSidebarHandler\n}) => {\n  const classes = useStyles();\n  const iconButton = /*#__PURE__*/React.createElement(IconButton, {\n    className: clsx(classes.iconContainer, {\n      [classes.link]: noLink\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    className: isLinkActive ? classes.active : classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: clsx(classes.container, {\n      [classes.showOnMobileUpBar]: isUpBar,\n      [classes.mobile]: isMobile,\n      [classes.active]: isLinkActive\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    onClick: openSidebarHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, !noLink ? /*#__PURE__*/React.createElement(MenuLink, {\n    to: to,\n    target: target,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, iconButton, !isUpBar ? /*#__PURE__*/React.createElement(Typography, {\n    className: clsx(classes.title, {\n      [classes.animation]: isSidebarOpen\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, title) : null) : iconButton));\n};\n\nNavigationItem.defaultProps = {\n  to: '/',\n  isLinkActive: false,\n  target: '_self',\n  isSidebarOpen: false,\n  title: '',\n  isUpBar: false,\n  isMobile: false,\n  noLink: false,\n  openSidebarHandler: () => {}\n};\nNavigationItem.propTypes = {\n  icon: PropTypes.func.isRequired,\n  to: PropTypes.string,\n  isLinkActive: PropTypes.bool,\n  target: PropTypes.string,\n  isSidebarOpen: PropTypes.bool,\n  title: PropTypes.string,\n  openSidebarHandler: PropTypes.func,\n  isUpBar: PropTypes.bool,\n  isMobile: PropTypes.bool,\n  noLink: PropTypes.bool\n};\nexport default NavigationItem;","map":{"version":3,"sources":["/home/bureev/Pro/krk/skeleton/src/elements/Sider/elements/NavigationItem/NavigationItem.jsx"],"names":["React","PropTypes","clsx","Box","Typography","IconButton","MenuLink","useStyles","NavigationItem","to","target","isLinkActive","icon","Icon","noLink","isMobile","isUpBar","isSidebarOpen","title","openSidebarHandler","classes","iconButton","iconContainer","link","active","container","showOnMobileUpBar","mobile","animation","defaultProps","propTypes","func","isRequired","string","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,UAA1B,QAA4C,mBAA5C;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AACtBC,EAAAA,EADsB;AAEtBC,EAAAA,MAFsB;AAGtBC,EAAAA,YAHsB;AAItBC,EAAAA,IAAI,EAAEC,IAJgB;AAKtBC,EAAAA,MALsB;AAMtBC,EAAAA,QANsB;AAOtBC,EAAAA,OAPsB;AAQtBC,EAAAA,aARsB;AAStBC,EAAAA,KATsB;AAUtBC,EAAAA;AAVsB,CAAD,KAWjB;AACJ,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AAEA,QAAMc,UAAU,gBACd,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEnB,IAAI,CAACkB,OAAO,CAACE,aAAT,EAAwB;AAAE,OAACF,OAAO,CAACG,IAAT,GAAgBT;AAAlB,KAAxB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEH,YAAY,GAAGS,OAAO,CAACI,MAAX,GAAoBJ,OAAO,CAACR,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMA,sBACE;AACE,IAAA,SAAS,EAAEV,IAAI,CAACkB,OAAO,CAACK,SAAT,EAAoB;AACjC,OAACL,OAAO,CAACM,iBAAT,GAA6BV,OADI;AAEjC,OAACI,OAAO,CAACO,MAAT,GAAkBZ,QAFe;AAGjC,OAACK,OAAO,CAACI,MAAT,GAAkBb;AAHe,KAApB,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAEQ,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACL,MAAD,gBACC,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAEL,EAAd;AAAkB,IAAA,MAAM,EAAEC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,UADH,EAEG,CAACL,OAAD,gBACC,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEd,IAAI,CAACkB,OAAO,CAACF,KAAT,EAAgB;AAAE,OAACE,OAAO,CAACQ,SAAT,GAAqBX;AAAvB,KAAhB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqFC,KAArF,CADD,GAEG,IAJN,CADD,GAQCG,UATJ,CAPF,CADF;AAsBD,CA1CD;;AA2CAb,cAAc,CAACqB,YAAf,GAA8B;AAC5BpB,EAAAA,EAAE,EAAE,GADwB;AAE5BE,EAAAA,YAAY,EAAE,KAFc;AAG5BD,EAAAA,MAAM,EAAE,OAHoB;AAI5BO,EAAAA,aAAa,EAAE,KAJa;AAK5BC,EAAAA,KAAK,EAAE,EALqB;AAM5BF,EAAAA,OAAO,EAAE,KANmB;AAO5BD,EAAAA,QAAQ,EAAE,KAPkB;AAQ5BD,EAAAA,MAAM,EAAE,KARoB;AAS5BK,EAAAA,kBAAkB,EAAE,MAAM,CAAE;AATA,CAA9B;AAYAX,cAAc,CAACsB,SAAf,GAA2B;AACzBlB,EAAAA,IAAI,EAAEX,SAAS,CAAC8B,IAAV,CAAeC,UADI;AAEzBvB,EAAAA,EAAE,EAAER,SAAS,CAACgC,MAFW;AAGzBtB,EAAAA,YAAY,EAAEV,SAAS,CAACiC,IAHC;AAIzBxB,EAAAA,MAAM,EAAET,SAAS,CAACgC,MAJO;AAKzBhB,EAAAA,aAAa,EAAEhB,SAAS,CAACiC,IALA;AAMzBhB,EAAAA,KAAK,EAAEjB,SAAS,CAACgC,MANQ;AAOzBd,EAAAA,kBAAkB,EAAElB,SAAS,CAAC8B,IAPL;AAQzBf,EAAAA,OAAO,EAAEf,SAAS,CAACiC,IARM;AASzBnB,EAAAA,QAAQ,EAAEd,SAAS,CAACiC,IATK;AAUzBpB,EAAAA,MAAM,EAAEb,SAAS,CAACiC;AAVO,CAA3B;AAaA,eAAe1B,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport { Box, Typography, IconButton } from '@material-ui/core';\n\nimport MenuLink from '../MenuLink/MenuLink';\nimport useStyles from './styled';\n\nconst NavigationItem = ({\n  to,\n  target,\n  isLinkActive,\n  icon: Icon,\n  noLink,\n  isMobile,\n  isUpBar,\n  isSidebarOpen,\n  title,\n  openSidebarHandler,\n}) => {\n  const classes = useStyles();\n\n  const iconButton = (\n    <IconButton className={clsx(classes.iconContainer, { [classes.link]: noLink })}>\n      <Icon className={isLinkActive ? classes.active : classes.icon} />\n    </IconButton>\n  );\n\n  return (\n    <li\n      className={clsx(classes.container, {\n        [classes.showOnMobileUpBar]: isUpBar,\n        [classes.mobile]: isMobile,\n        [classes.active]: isLinkActive,\n      })}\n    >\n      <Box onClick={openSidebarHandler}>\n        {!noLink ? (\n          <MenuLink to={to} target={target}>\n            {iconButton}\n            {!isUpBar ? (\n              <Typography className={clsx(classes.title, { [classes.animation]: isSidebarOpen })}>{title}</Typography>\n            ) : null}\n          </MenuLink>\n        ) : (\n          iconButton\n        )}\n      </Box>\n    </li>\n  );\n};\nNavigationItem.defaultProps = {\n  to: '/',\n  isLinkActive: false,\n  target: '_self',\n  isSidebarOpen: false,\n  title: '',\n  isUpBar: false,\n  isMobile: false,\n  noLink: false,\n  openSidebarHandler: () => {},\n};\n\nNavigationItem.propTypes = {\n  icon: PropTypes.func.isRequired,\n  to: PropTypes.string,\n  isLinkActive: PropTypes.bool,\n  target: PropTypes.string,\n  isSidebarOpen: PropTypes.bool,\n  title: PropTypes.string,\n  openSidebarHandler: PropTypes.func,\n  isUpBar: PropTypes.bool,\n  isMobile: PropTypes.bool,\n  noLink: PropTypes.bool,\n};\n\nexport default NavigationItem;\n"]},"metadata":{},"sourceType":"module"}