{"ast":null,"code":"var _jsxFileName = \"/home/bureev/Pro/krk/skeleton/src/components/auth/AuthRecoveryPage/elements/RecoveryForm/RecoveryForm.jsx\";\nimport React, { memo } from 'react';\nimport cx from 'classnames';\nimport { Grid, Box, Input, FormControlLabel, Checkbox, Button } from '@material-ui/core';\nimport useWindowSize from '../../../../../hooks/useWindowSize';\nimport useStyles from './styled';\n\nconst renderSubButton = ({\n  classes,\n  block,\n  subtitle\n}) => /*#__PURE__*/React.createElement(Button, {\n  size: \"large\",\n  color: \"primary\",\n  className: cx(classes.subButton, block && classes.loginButton),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Box, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, subtitle));\n\nconst RecoveryForm = ({\n  subtitle,\n  firstPlaceholder,\n  secondPlaceholder,\n  checkboxNode,\n  checkboxNodeMobile,\n  mainButtonTitle,\n  padded\n}) => {\n  const classes = useStyles();\n  const size = useWindowSize();\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    variant: \"outlined\",\n    placeholder: firstPlaceholder,\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    variant: \"outlined\",\n    placeholder: secondPlaceholder,\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    className: classes.footerForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }\n    }),\n    label: size.width > 1280 ? checkboxNode : checkboxNodeMobile || checkboxNode,\n    className: classes.checkboxLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), subtitle && size.width > 1280 && renderSubButton({\n    classes,\n    subtitle\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    className: classes.footerForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, subtitle && size.width < 1279 && renderSubButton({\n    classes,\n    subtitle,\n    block: size.width\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"primary\",\n    className: cx(classes.loginButton, size.width < 1279 && classes.withoutSpacing, padded && classes.padded),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, mainButtonTitle))));\n};\n\nexport default memo(RecoveryForm);","map":{"version":3,"sources":["/home/bureev/Pro/krk/skeleton/src/components/auth/AuthRecoveryPage/elements/RecoveryForm/RecoveryForm.jsx"],"names":["React","memo","cx","Grid","Box","Input","FormControlLabel","Checkbox","Button","useWindowSize","useStyles","renderSubButton","classes","block","subtitle","subButton","loginButton","RecoveryForm","firstPlaceholder","secondPlaceholder","checkboxNode","checkboxNodeMobile","mainButtonTitle","padded","size","input","footerForm","width","checkboxLabel","withoutSpacing"],"mappings":"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","sourcesContent":["import React, { memo } from 'react';\n\nimport cx from 'classnames';\nimport { Grid, Box, Input, FormControlLabel, Checkbox, Button } from '@material-ui/core';\n\nimport useWindowSize from '../../../../../hooks/useWindowSize';\nimport useStyles from './styled';\n\nconst renderSubButton = ({ classes, block, subtitle }) => (\n  <Button size=\"large\" color=\"primary\" className={cx(classes.subButton, block && classes.loginButton)}>\n    <Box>{subtitle}</Box>\n  </Button>\n);\n\nconst RecoveryForm = ({\n  subtitle,\n  firstPlaceholder,\n  secondPlaceholder,\n  checkboxNode,\n  checkboxNodeMobile,\n  mainButtonTitle,\n  padded,\n}) => {\n  const classes = useStyles();\n  const size = useWindowSize();\n\n  return (\n    <Grid container direction=\"column\">\n      <Input variant=\"outlined\" placeholder={firstPlaceholder} className={classes.input} />\n      <Input variant=\"outlined\" placeholder={secondPlaceholder} className={classes.input} />\n      <Grid container direction=\"row\" justify=\"space-between\" className={classes.footerForm}>\n        <FormControlLabel\n          control={<Checkbox color=\"primary\" />}\n          label={size.width > 1280 ? checkboxNode : checkboxNodeMobile || checkboxNode}\n          className={classes.checkboxLabel}\n        />\n        {subtitle && size.width > 1280 && renderSubButton({ classes, subtitle })}\n      </Grid>\n      <Grid container direction=\"column\" className={classes.footerForm}>\n        {subtitle && size.width < 1279 && renderSubButton({ classes, subtitle, block: size.width })}\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          color=\"primary\"\n          className={cx(classes.loginButton, size.width < 1279 && classes.withoutSpacing, padded && classes.padded)}\n        >\n          <Box>{mainButtonTitle}</Box>\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(RecoveryForm);\n"]},"metadata":{},"sourceType":"module"}